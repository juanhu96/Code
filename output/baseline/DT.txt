/mnt/phd/jihu/opioid/Code/baseline_main.py:93: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  FULL = pd.read_csv(file_path, delimiter=",", dtype={'concurrent_MME': float,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/mnt/phd/jihu/opioid/Code/baseline_main.py:323: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  FULL_TEST = pd.read_csv(test_file_path, delimiter=",", dtype={'concurrent_MME': float,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/mnt/phd/jihu/opioid/Code/utils/model_selection.py:323: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  test_results_by_MME = FULL.groupby('MME_bins').apply(lambda x: {'test_accuracy': accuracy_score(x['long_term_180'], x['Pred']),
/mnt/phd/jihu/opioid/Code/baseline_main.py:323: DtypeWarning: Columns (2) have mixed types. Specify dtype option on import or set low_memory=False.
  FULL_TEST = pd.read_csv(test_file_path, delimiter=",", dtype={'concurrent_MME': float,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/users/phd/jihu/anaconda3/lib/python3.9/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/mnt/phd/jihu/opioid/Code/utils/model_selection.py:323: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  test_results_by_MME = FULL.groupby('MME_bins').apply(lambda x: {'test_accuracy': accuracy_score(x['long_term_180'], x['Pred']),
============================================================ 
Baseline train with model DecisionTree

Filtered columns: ['num_prescribers_past1802', 'num_prescribers_past1803', 'num_prescribers_past1804', 'num_prescribers_past1805', 'num_prescribers_past1806', 'num_pharmacies_past1802', 'num_pharmacies_past1803', 'num_pharmacies_past1804', 'num_pharmacies_past1805', 'num_pharmacies_past1806', 'concurrent_benzo1', 'days_supply3', 'days_supply5', 'days_supply7', 'days_supply10', 'daily_dose25', 'daily_dose50', 'daily_dose75', 'daily_dose90', 'num_prior_prescriptions1', 'diff_MME1', 'diff_days1', 'patient_gender', 'Hydrocodone', 'Oxycodone', 'Codeine', 'Morphine', 'HMFO', 'long_acting', 'CashCredit', 'Medicare', 'Medicaid', 'Other', 'switch_drug', 'switch_payment', 'ever_switch_drug', 'ever_switch_payment', 'prescriber_yr_num_prescriptions_above50', 'prescriber_yr_num_prescriptions_above75', 'prescriber_yr_num_patients_above50', 'prescriber_yr_num_patients_above75', 'prescriber_yr_num_pharmacies_above50', 'prescriber_yr_num_pharmacies_above75', 'prescriber_yr_avg_MME_above50', 'prescriber_yr_avg_MME_above75', 'prescriber_yr_avg_days_above50', 'prescriber_yr_avg_days_above75', 'pharmacy_yr_num_prescriptions_above50', 'pharmacy_yr_num_prescriptions_above75', 'pharmacy_yr_num_patients_above50', 'pharmacy_yr_num_patients_above75', 'pharmacy_yr_num_prescribers_above50', 'pharmacy_yr_num_prescribers_above75', 'pharmacy_yr_avg_MME_above50', 'pharmacy_yr_avg_MME_above75', 'pharmacy_yr_avg_days_above50', 'pharmacy_yr_avg_days_above75', 'zip_pop_density_above50', 'zip_pop_density_above75', 'median_household_income_above50', 'median_household_income_above75', 'family_poverty_pct_above50', 'family_poverty_pct_above75', 'unemployment_pct_above50', 'unemployment_pct_above75']
GridSearchCV for DT: 1108.9s


Fitting for DT: 44.3s

4 features selected: ['days_supply10', 'num_prior_prescriptions1', 'diff_days1', 'prescriber_yr_avg_days_above75']
{'training_accuracy': 0.917, 'training_roc_auc': 0.856, 'training_calibration_error': 0.0}
Finished training and fitting DecisionTree: 0.32 hours
Testing on all data for DecisionTree with setting _DecisionTree
============================================================ 
Baseline test with model DecisionTree

The test file path is /export/storage_cures/CURES/Processed/FULL_OPIOID_2019_INPUT.csv

Optimal threshold for binary classification: 0.21981920237086677
test_accuracy
0.863
test_roc_auc
0.858
test_pr_auc
0.465
test_calibration_error
0.005


0: Accuracy = 0.8596, ROC AUC = 0.8523, Calibration = 0.0039
1: Accuracy = 0.8653, ROC AUC = 0.8628, Calibration = 0.0064
----------------------------------------------------------------------------------------------------
Total prescriptions from true positive patients: 
 (594424, 153)
----------------------------------------------------------------------------------------------------
Proportion of LT users detected within a month: 81.7; two months: 91.3, three months: 95.1
1
{'test_accuracy': 0.944, 'test_recall': 0.639, 'test_precision': 0.259, 'test_roc_auc': 0.862, 'test_pr_auc': 0.196, 'test_calibration_error': 0.017}
2
{'test_accuracy': 0.78, 'test_recall': 0.873, 'test_precision': 0.275, 'test_roc_auc': 0.866, 'test_pr_auc': 0.397, 'test_calibration_error': 0.035}
3
{'test_accuracy': 0.732, 'test_recall': 0.893, 'test_precision': 0.416, 'test_roc_auc': 0.857, 'test_pr_auc': 0.559, 'test_calibration_error': 0.027}


[0, 10)
{'test_accuracy': 0.6454868483927411, 'test_recall': 0.8662604764005294, 'test_roc_auc': 0.8073645766937656, 'test_pr_auc': 0.36948156727748216, 'test_calibration_error': 0.038466870337680745, 'correctly_predicted_positives_ratio': 0.1128907667489428}
[10, 20)
{'test_accuracy': 0.8330004202776059, 'test_recall': 0.8382661544636202, 'test_roc_auc': 0.8706656814623877, 'test_pr_auc': 0.3938059646479992, 'test_calibration_error': 0.0151192394075804, 'correctly_predicted_positives_ratio': 0.06782055908982529}
[20, 30)
{'test_accuracy': 0.9192269653096751, 'test_recall': 0.7853791760745238, 'test_roc_auc': 0.8767333626809412, 'test_pr_auc': 0.41112192505964973, 'test_calibration_error': 0.01278061613094991, 'correctly_predicted_positives_ratio': 0.03871371484782162}
[30, 40)
{'test_accuracy': 0.903899539837828, 'test_recall': 0.7942804670077397, 'test_roc_auc': 0.8751893141411133, 'test_pr_auc': 0.4463957564917194, 'test_calibration_error': 0.011691764767073235, 'correctly_predicted_positives_ratio': 0.05194239222562702}
[40, 50)
{'test_accuracy': 0.8524613934604509, 'test_recall': 0.8116677516718944, 'test_roc_auc': 0.8627379768240926, 'test_pr_auc': 0.4959240460984825, 'test_calibration_error': 0.013614343705401336, 'correctly_predicted_positives_ratio': 0.09249551929779008}
[50, 60)
{'test_accuracy': 0.9383722407399566, 'test_recall': 0.6420600346124008, 'test_roc_auc': 0.8090645183667328, 'test_pr_auc': 0.4000338248270583, 'test_calibration_error': 0.007805982712207317, 'correctly_predicted_positives_ratio': 0.03254248156460404}
[60, 70)
{'test_accuracy': 0.8230328258587744, 'test_recall': 0.8042610119404178, 'test_roc_auc': 0.8473843772131248, 'test_pr_auc': 0.5354677807192199, 'test_calibration_error': 0.028452738046864802, 'correctly_predicted_positives_ratio': 0.12045119482298199}
[70, 80)
{'test_accuracy': 0.8904670674506177, 'test_recall': 0.7046742730953257, 'test_roc_auc': 0.8231525022598493, 'test_pr_auc': 0.4802230638305829, 'test_calibration_error': 0.024344525477394845, 'correctly_predicted_positives_ratio': 0.07026931800665037}
[80, 90)
{'test_accuracy': 0.8241154544212642, 'test_recall': 0.8067600736346902, 'test_roc_auc': 0.852042412376947, 'test_pr_auc': 0.6189478759533623, 'test_calibration_error': 0.052465283893542235, 'correctly_predicted_positives_ratio': 0.1539489861634238}
[90, 100)
{'test_accuracy': 0.7914662185246402, 'test_recall': 0.780243913835802, 'test_roc_auc': 0.819031108033833, 'test_pr_auc': 0.5489957832250986, 'test_calibration_error': 0.058764853178405504, 'correctly_predicted_positives_ratio': 0.15418424916204213}
above 100
{'test_accuracy': 0.7878594467912038, 'test_recall': 0.7584069150584963, 'test_roc_auc': 0.8094457199696659, 'test_pr_auc': 0.5864506675960262, 'test_calibration_error': 0.0834385240282607, 'correctly_predicted_positives_ratio': 0.17241768109755853}


ROC information for DecisionTree saved to ../output/baseline/files/DecisionTree_roc_test_info.pkl
Calibration information for DecisionTree saved to ../output/baseline/files/DecisionTree_calibration_test_info.pkl
Proportions information for DecisionTree saved to ../output/baseline/files/DecisionTree_proportions_test_info.pkl

Finished computing and exporting results: 0.04hours

Testing on naive data for DecisionTree with setting _DecisionTree_naive
============================================================ 
Baseline test with model DecisionTree

The test file path is /export/storage_cures/CURES/Processed/FULL_OPIOID_2019_INPUT.csv

Subsetting dataset to first prescription only with (3614699, 151) prescriptions.
Subsetting stumps dataset to first prescription only with (3614699, 96) prescriptions.
Optimal threshold for binary classification: 0.053759044539588664
test_accuracy
0.885
test_roc_auc
0.862
test_pr_auc
0.196
test_calibration_error
0.017


0: Accuracy = 0.8835, ROC AUC = 0.8538, Calibration = 0.0159
1: Accuracy = 0.8859, ROC AUC = 0.8685, Calibration = 0.0178
----------------------------------------------------------------------------------------------------
Total prescriptions from true positive patients: 
 (73931, 153)
----------------------------------------------------------------------------------------------------
Proportion of LT users detected within a month: 100.0; two months: 100.0, three months: 100.0
1
{'test_accuracy': 0.885, 'test_recall': 0.804, 'test_precision': 0.157, 'test_roc_auc': 0.862, 'test_pr_auc': 0.196, 'test_calibration_error': 0.017}


[0, 10)
{'test_accuracy': 0.42862383118355585, 'test_recall': 0.8894686907020873, 'test_roc_auc': 0.7290005543445085, 'test_pr_auc': 0.11222537482939678, 'test_calibration_error': 0.03330682738664048, 'correctly_predicted_positives_ratio': 0.05002067521242114}
[10, 20)
{'test_accuracy': 0.8421485998699003, 'test_recall': 0.8216099005711868, 'test_roc_auc': 0.8520887100561297, 'test_pr_auc': 0.15038336753355905, 'test_calibration_error': 0.01597918359659866, 'correctly_predicted_positives_ratio': 0.022016317726572497}
[20, 30)
{'test_accuracy': 0.9420648392432242, 'test_recall': 0.7290740256343186, 'test_roc_auc': 0.8444970056400906, 'test_pr_auc': 0.18247512298051788, 'test_calibration_error': 0.018281861720974048, 'correctly_predicted_positives_ratio': 0.010531347028146251}
[30, 40)
{'test_accuracy': 0.9241608319470161, 'test_recall': 0.8057735971456373, 'test_roc_auc': 0.8787483139522448, 'test_pr_auc': 0.24219306840133698, 'test_calibration_error': 0.02073133282282333, 'correctly_predicted_positives_ratio': 0.016219258361647285}
[40, 50)
{'test_accuracy': 0.8736055906590852, 'test_recall': 0.8445407962160032, 'test_roc_auc': 0.8823267169039829, 'test_pr_auc': 0.29454676816616926, 'test_calibration_error': 0.025479362124653612, 'correctly_predicted_positives_ratio': 0.03321469098214784}
[50, 60)
{'test_accuracy': 0.9764476462802235, 'test_recall': 0.6155312053358742, 'test_roc_auc': 0.8007714840817756, 'test_pr_auc': 0.2560255640244599, 'test_calibration_error': 0.02040169596227075, 'correctly_predicted_positives_ratio': 0.006527164522941064}
[60, 70)
{'test_accuracy': 0.8439770080086013, 'test_recall': 0.8359616801768607, 'test_roc_auc': 0.8695701453208542, 'test_pr_auc': 0.29765448018090096, 'test_calibration_error': 0.026051645907402367, 'correctly_predicted_positives_ratio': 0.03909189904475719}
[70, 80)
{'test_accuracy': 0.9598527293100688, 'test_recall': 0.6789797713280563, 'test_roc_auc': 0.8272950634511451, 'test_pr_auc': 0.28482299497508656, 'test_calibration_error': 0.021137124383180102, 'correctly_predicted_positives_ratio': 0.012357931807267488}
[80, 90)
{'test_accuracy': 0.8572557653766901, 'test_recall': 0.785593220338983, 'test_roc_auc': 0.8459044043447081, 'test_pr_auc': 0.2192709193403086, 'test_calibration_error': 0.017994413791045986, 'correctly_predicted_positives_ratio': 0.02616648319078669}
[90, 100)
{'test_accuracy': 0.8401695378725732, 'test_recall': 0.8234362628661916, 'test_roc_auc': 0.8595749080901591, 'test_pr_auc': 0.3500764126412148, 'test_calibration_error': 0.03359567255466954, 'correctly_predicted_positives_ratio': 0.05687722176647525}
above 100
{'test_accuracy': 0.8645499108734402, 'test_recall': 0.7823537251765961, 'test_roc_auc': 0.8510762538625662, 'test_pr_auc': 0.35128155384759274, 'test_calibration_error': 0.0282239168220958, 'correctly_predicted_positives_ratio': 0.04359774212715389}


ROC information for DecisionTree saved to ../output/baseline/files/DecisionTree_roc_test_info_naive.pkl
Calibration information for DecisionTree saved to ../output/baseline/files/DecisionTree_calibration_test_info_naive.pkl
Proportions information for DecisionTree saved to ../output/baseline/files/DecisionTree_proportions_test_info_naive.pkl

Finished computing and exporting results: 0.02hours

